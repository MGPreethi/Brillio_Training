Common machine learning algorithms:
Linear regression: 
Logistic regression
SVM(Support vector machine)
Naive Bayes
Clustering:
Neural networks
Decision trees
Random forests

Types of machine learning:
supervised
un-supervised
reinforcement

What is LaMDA?
Google LaMDA (Language Model for Dialogue Applications) is a collection of conversational large language models (LLMs) that work together 
to complete different types of generative AI tasks that involve dialogue.i8iu

Real world ML use cases:
Speech recognition ex:siri
Customer service: online chatbots
fraud detection

ChatGPT is an extrapolation of a class of machine learning Natural Language Processing models known as Large Language Model (LLMs).

ML algos are computational methods that allows computers to understsand patterns and make adjustments based on data without any
 explicit programming.

NLP-Natural language processing (NLP) is a subfield of computer science and artificial intelligence (AI) that uses machine learning 
to enable computers
 to understand and communicate with human language. 
 
 What is ML?
Machine learning (ML) is a branch of artificial intelligence (AI) and computer science that focuses on the using data and algorithms to 
enable AI to imitate the way that humans learn, gradually improving its accuracy.
===================================================

https://www.geeksforgeeks.org/mysql-interview-questions/#q43

There are various relationships, namely:

One-to-One Relationship.
One to Many Relationships.
Many to One Relationship.
Self-Referencing Relationship.



SQL commands are like instructions to a table. It is used to interact with the database with some operations.

62) What is REGEXP?
REGEXP is a pattern match using a regular expression. The regular expression is a powerful way of specifying a pattern for a sophisticated search.

To understand it better, you can think of a situation
 of daily life when you search for .txt files to list all text files in the file manager. The regex equivalent for .txt will be .*\.txt.
 
 19. How to delete a table in MySQL?
We can delete a table by using DROP TABLE statement. This statement deletes complete data of table.

DROP TABLE table-name

27. Write a statement to find duplicate rows In the MySQL table?

SQL | Constraints:
Used to specify the limit on the type of data that can be stored in a particular column in a table using constraints.
NOT NULL: This constraint tells that we cannot store a null value in a column.
UNIQUE: This constraint when specified with a column, tells that all the values in the column must be unique. 
PRIMARY KEY: A primary key is a field which can uniquely identify each row in a table. 
FOREIGN KEY: A Foreign key is a field which can uniquely identify each row in a another table. And this constraint is used to specify a field as Foreign key.
CHECK: This constraint helps to validate the values of a column to meet a particular condition
DEFAULT: This constraint specifies a default value for the column when no value is specified by the user.

12. What is a Self-Join?
A self JOIN is a case of regular join where a table is joined to itself.
13. What is a Cross-Join?
Cross join can be defined as a cartesian product of the two tables included in the join. Where no.of rows in first table is multiplied by no. of rows in 2nd table.

What is index:
Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.

18. What is a Subquery? What are its types?
A subquery is a query within another query, also known as a nested query or inner query.

ORDER BY clause in SQL is used to sort the records based on some field(s) in ascending (ASC) or descending order (DESC).
The GROUP BY is used to group the rows that have the same values.

Normalization:
It is a prcess of organizing data. It is used to avoid duplication and redundancy.
It includes the creation of tables, establishing relationships between them, and defining rules for those relationships.

Denormalization:
Denormalization is the inverse process of normalization, where the normalized schema is converted into a schema that has redundant information. 
------------------
What is a Stored Procedure?
A stored procedure is a prepared SQL code that you can save, so the code can be reused whenever needed.
So if you have an SQL query that you write over and over again, save it as a stored procedure, and then just call it to execute it.
You can also pass parameters to a stored procedure, so that the stored procedure can act based on the parameter value(s) that is passed.

Advantages:
Stored Procedure increases the performance of the applications.
Stored procedure reduces the traffic between application and database server.

Pattern Matching:
SQL pattern matching allows you to search for patterns in data if you don't know the exact word or phrase you are seeking. 

8. What is a Primary Key?
The PRIMARY KEY constraint uniquely identifies each row in a table. It must contain UNIQUE values and has an implicit NOT NULL constraint.
A table in SQL is strictly restricted to have one and only one primary key, which is comprised of single or multiple fields (columns).

Foreign Key:
The FOREIGN KEY constraint is a key used to link two tables together.
A FOREIGN KEY is a field (or collection of fields) in one table that refers to the PRIMARY KEY in another table.
The purpose of Foreign keys is to maintain data integrity and allow navigation between two different instances of an entity.
The table with the foreign key constraint is labeled as the child table, and the table containing the candidate key is labeled as the referenced or parent table.

Candidate key:
A Candidate Key is a column or group of columns we can use to uniquely identity a row in a table. 
There can be multiple Candidate Keys in a table, but we will pick just one of them to serve as the Primary Key of the table.

SQL	MySQL difference:
SQL stands for Structured Query Language. It is a query language that allows users to manage relational database management systems.	
MySQL is an RDBMS that can implement SQL queries to manipulate the data.
SQL is a language which is used to operate your database whereas MySQL was one of the first open-source database available in the market

34. What is User-defined function? What are its various types?
The user-defined functions in SQL are like functions in any other programming language that accept parameters, perform complex calculations, and return a value. 
Scalar Function: As explained earlier, user-defined scalar functions return a single scalar value.
Table-Valued Functions: User-defined table-valued functions return a table as output.


https://www.geeksforgeeks.org/sql-join-set-1-inner-left-right-and-full-joins/

https://www.javatpoint.com/dbms-normalization - 

SELECT StudentCourse.COURSE_ID, Student.NAME, Student.AGE FROM Student
INNER JOIN StudentCourse
ON Student.ROLL_NO = StudentCourse.ROLL_NO;

SELECT Student.NAME,StudentCourse.COURSE_ID 
FROM Student
LEFT JOIN StudentCourse 
ON StudentCourse.ROLL_NO = Student.ROLL_NO;


SELECT Student.NAME,StudentCourse.COURSE_ID 
FROM Student
RIGHT JOIN StudentCourse 
ON StudentCourse.ROLL_NO = Student.ROLL_NO;

SELECT Student.NAME,StudentCourse.COURSE_ID 
FROM Student
FULL JOIN StudentCourse 
ON StudentCourse.ROLL_NO = Student.ROLL_NO;

SELECT *
FROM table1
CROSS JOIN table2;

===================================================================
java 8
Q2: What advantages does Java 8 bring?
Code is more concise and readable
Code is more reusable
Code is more testable and maintainable
Users can write parallel code
Applications now perform better
Code is far more productive

(parameter list) -> lambda body
A basic example of the Lambda Expression is:
(x,y) -> x+y

Optional class to prevent the application from crashing and terminating unexpectedly.

Date/Time API
Java has introduced a new Date and Time API since Java 8. The java.time package contains Java 8 Date and Time classes.

Q4: How are functional interfaces and Lambda Expressions related?
Lambda expressions are applied only to the functional interfaceâ€™s abstract method.
------------------------
Lambda expression example: execute this in programiz online editor
Is an anonymous fn without name, return type, access modifier and having only one lambda symbol.
import java.util.ArrayList;
class Test {
    public static void main(String args[])
    {
        // Creating an ArrayList with elements
        // {1, 2, 3, 4}
        ArrayList<Integer> arrL = new ArrayList<Integer>();
		//inserting elements to array list
        arrL.add(1);
        arrL.add(2);
        arrL.add(3);
        arrL.add(4);
 
        // Using lambda expression to print all elements
        // of arrL
        arrL.forEach(n -> System.out.println(n));
 
        // Using lambda expression to print even elements
        // of arrL
        arrL.forEach(n -> {
            if (n % 2 == 0)
                System.out.println(n);
        });
    }
}

O/P:
1
2
3
4
2
4
---------------------------------
Java provides a new method forEach() to iterate the elements.
This method takes a single parameter which is a functional interface. So, you can pass lambda expression as an argument.
--------------------------------------------
// Java Program to Illustrate Functional Interface: Are those interfaces which can have only one abstract method, It can have static and default methods.
// Via apply() method
 
// Importing interface
import java.util.function.Function;
 
// Main class
public class GFG {
 
    // Main driver method
    public static void main(String args[])
    {
        // Function which takes in a number
        // and returns half of it
        Function<Integer, Double> half = a -> a / 2.0;
 
        // Applying the function to get the result
        System.out.println(half.apply(10));
    }
}
O/p:
5.0

---------------------------------------
The Stream API, introduced in Java 8, it is used to process collections of objects.
We have java.util.stream package. This package consists of classes, interfaces and enum to allows functional-style operations on the elements.
Streams internally works like:
1.Getting stream from collection
2. Filtering only required elements
3. Collecting required elements to list.

Syntax:
Stream s = c.stream();

// Java Program to illustrate FILTER  
// & COLLECT Operations 
import java.io.*; 
import java.util.*; 
import java.util.stream.*; 
  
// Main class 
public class GFG { 
  
    // Main driver method 
    public static void main(String[] args) 
    { 
        // Creating an ArrayList object of integer type 
        ArrayList<Integer> al = new ArrayList<Integer>(); 
  
        // Inserting elements to ArrayList class object 
        // Custom input integer numbers 
        al.add(2); 
        al.add(6); 
        al.add(9); 
        al.add(4); 
        al.add(20); 
  
        // First lets print the collection 
        System.out.println("Printing the collection : "
                           + al); 
  
        // Printing new line for better output readability 
        System.out.println(); 
  
        // Stream operations 
        // 1. Getting the stream from this collection 
        // 2. Filtering out only even elements 
        // 3. Collecting the required elements to List 
        List<Integer> ls 
            = al.stream() 
                  .filter(i -> i % 2 == 0) 
                  .collect(Collectors.toList()); 
  
        // Print the collection after stream operation 
        // as stored in List object 
        System.out.println( 
            "Printing the List after stream operation : "
            + ls); 
    } 
}
O/p:
Printing the collection : [2, 6, 9, 4, 20]
Printing the List after stream operation : [2, 6, 4, 20]
-------------------------
New date-time API is introduced in Java 8 to overcome the following drawbacks of old date-time API : 

Not thread safe :  the new Date and Time APIs introduced in Java 8 are immutable and thread safe,
Less operations : In old API there are only few date operations but the new API provides us with many date operations.

LocalTime currentTime = LocalTime.now();				//13:33:43.557

LocalDate currentDate = LocalDate.now();				//2020-05-03

LocalDateTime currentDateTime = LocalDateTime.now();	//2020-05-03T13:33:43.557

// Java code for LocalDate
// / LocalTime Function
import java.time.*;
import java.time.format.DateTimeFormatter;
  
public class Date {
 
public static void LocalDateTimeApi()
{
  
    // the current date
    LocalDate date = LocalDate.now();
    System.out.println("the current date is "+
                        date);
  
  
    // the current time
    LocalTime time = LocalTime.now();
    System.out.println("the current time is "+
                        time);
      
  
    // will give us the current time and date
    LocalDateTime current = LocalDateTime.now();
    System.out.println("current date and time : "+
                        current);
  
  
    // to print in a particular format
    DateTimeFormatter format = 
      DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");  
   
    String formatedDateTime = current.format(format);  
    
    System.out.println("in formatted manner "+
                        formatedDateTime);
  
  
    // printing months days and seconds
    Month month = current.getMonth();
    int day = current.getDayOfMonth();
    int seconds = current.getSecond();
    System.out.println("Month : "+month+" day : "+
                        day+" seconds : "+seconds);
  
    // printing some specified date
    LocalDate date2 = LocalDate.of(1950,1,26);
    System.out.println("the republic day :"+date2);
  
    // printing date with current time.
    LocalDateTime specificDate = 
        current.withDayOfMonth(24).withYear(2016);
 
    System.out.println("specific date with "+
                       "current time : "+specificDate);
}
 
    // Driver code
    public static void main(String[] args) 
    {
        LocalDateTimeApi();
    }
}
Output
the current date is 2021-09-23
the current time is 20:52:39.954238
current date and time : 2021-09-23T20:52:39.956909
in formatted manner 23-09-2021 20:52:39
Month : SEPTEMBER day : 23 seconds : 39
the republic day :1950-01-26
specific date with current time : 2016-09-24T20:52:39.956909
--------------------------
Java Optional example: 
Optional is used to show whether the value is present or not. The key benifit of this new construct is, it eliminates the need of excessive null checks and nullponterException.
It is a container that can hold one value, just like collections and arrays.
import java.util.Optional;  
public class OptionalExample {  
    public static void main(String[] args) {  
        String[] str = new String[10];        
        str[5] = "JAVA OPTIONAL CLASS EXAMPLE";  // Setting value for 5th index  
        Optional<String> checkNull = Optional.ofNullable(str[5]);  
        checkNull.ifPresent(System.out::println);   // printing value by using method reference  
        System.out.println(checkNull.get());    // printing value by using get method  
        System.out.println(str[5].toLowerCase());     
    }  
}  

Output:

JAVA OPTIONAL CLASS EXAMPLE
JAVA OPTIONAL CLASS EXAMPLE
java optional class example
=====================================================
Function 8:

////1.sum of the content of the array
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Day5
{
    class Program
    {
        static void Main(string[] args)
        {
       /*     int[] arr = { 1, 2, 3, 4 };
            int sum = arr.Sum();
            Console.WriteLine(sum);
            Console.ReadLine();
        }
    }
}  */

//2.print the content in the reverse order

 /*int[] arr={ 1, 2, 3, 4};
 int sum=0;
 for (int i=0; i<arr.Length; i++)
 {
     sum=sum+arr[i];
 }
 for (int i=arr.Length-1; i>=0; i--)
 {
     Console.WriteLine(arr[i]);
 }
 Console.ReadLine();
}
}
}  */


// 4. print reverse of the string

 /*  string str = "hello";
    char[] charArray = str.ToCharArray();
    Array.Reverse(charArray);
    string reversedStr = new string(charArray);
    Console.WriteLine("Reversed string: " + reversedStr);
    Console.ReadKey();
}
}
}   */   

//5. Create user defined function accepts a integer parameter find the cube of 
//the number accepted and print the result

  /* int n = 3;
   Console.WriteLine($"Cube of {n} is: {CalCube(n)}");
   Console.ReadKey();
}
static int CalCube(int n)
{
   return n * n * n;
}
}
} */  

//6. create a user defined function which accepts a string or array of characters as a parameter
//and print the length of the string

 /*  string str = "hello";
       PrintStringLength(str);
   }
   static void PrintStringLength(string str)
   {
       int length = str.Length;
       Console.WriteLine($"Length of the string is: {length}");
       Console.ReadKey();
   }
}
}    */




//7.create a user defined function which accepts a reference integer
//variable as a parameter and find the square of it

/*Console.WriteLine("Enter a number:");
    int n = Convert.ToInt32(Console.ReadLine());
    n *= n;
    Console.WriteLine("Square of the number: " + n);
            Console.ReadKey();
    }
    }
    }  */



////3.print all elements of the array expect the prime numbers if any

/* using System;

public class exceptPrimeArray
{
    static bool isPrime(int num)
    {
        if (num <= 1) return false;
        for (int i = 2; i <= Math.Sqrt(num); i++)
        {
            if (num % i == 0)
            {
                return false;
            }
        }
        return true;
    }
    static void primeArray(int[] arr)
    {
        for (int i = 0; i < arr.Length; i++)
        {
            if (!isPrime(arr[i]))
            {
                Console.WriteLine(arr[i]);
            }
        }

    }

    public static void Main(string[] args)
    {
        int[] arr = { 1, 2, 3, 4, 5};
        primeArray(arr);
    }
}  */




=================================================

CI And CD is the practice of automating the integration of code changes from multiple developers into a single codebase.
 It is a software development practice where the developers commit their work frequently to the central code repository (Github or Stash).

CI:
With Continuous Integration, developers frequently commit to a shared common repository using a version control system LIKE Git.
 A continuous integration pipeline can automatically run builds, store the artifacts, run unit tests, and even conduct code reviews using tools like Sonar.
 We can configure the CI pipeline to be triggered every time there is a commit/merge in the codebase.
 
 CD:
 Continuous delivery helps developers test their code in a production-ready environment, hence preventing any post-production issues.
 
Benifits:
CI/ CD enables organizations to develop software quickly and efficiently. CI/CD enables the process for getting products
to market faster , continuously moving code into production, and ensuring a steady flow of new features

most of the famous tools for the CI and CD which is Jenkins
----------------------------------------------------------
A stored procedure is a prepared SQL code that you can save, so the code can be reused over and over again.
 Function:It is used to calculate something from a given input. 
Procedure: Procedures are invoked using the CALL or EXECUTE statement. They are typically used to perform an action or a set of actions, 
and they may have output parameters to return values.
Function: Functions can be used in queries much like any other expression. They are part of the SELECT statement and can be used to 
compute values that are then included in the result set.
=================================================
1.Accept a characters and print if it's a consonant or vowels.
2.Print all the prime numbers from 1 to 15.
3.Find out the factorial of a number
4.Accept characters from the end users and print the no. of  repetation of same character.
5.


1. Create an integer array and print sum of content of an array
2. create an integer array and print the content in reverse order
3. create an integer array and print all elements of an array except the prime numbers if any
4. create a character array or create a string and print the reverse of the string
5. create a user defined function which accepts a integer parameter find the cube of the number accepted and print the result.
6. Create a user defined function which accepts a string or array of characters as a parameter and print the length of the string
7. Create a user defined function which accepts a reference integer variable as a parameter and find the square of it
8. Create a user defined function which keeps accepting integer variables till the user's choice, find the maximum number accepted and return the result.



1. Create an integer array and print the sum of the content of the array
2. create an integer array and print the content in the reverse order
3. create an integer array and print all elements of the array expect the prime numbers if any
4. create a character array or create a string and print reverse of the string
5. create user defined function which accepts a integer parameter find the cube of the number accepted and print the result
6. create a user defined function which accepts a string or array of characters as a parameter and print the length of the string
7. create a user defined function which accepts a reference integer variable as a parameter and find the square of it
8. create a user defined function which keeps accepting integer variables till the users choice find the maximum number accepted and return the result
=======================================================
